openapi: 3.0.0
info:
    version: '0.0.1'
    title: 'HazelNet External'
servers:
    - url: 'https://api.hazelnet.io'

paths:
    /community/whitelists/{whitelistName}/signups:
        get:
            summary: 'Get signups for a whitelist'
            operationId: getWhitelistSignups
            tags:
                - discord
                - whitelist
            parameters:
                - $ref: '#/components/parameters/WhitelistNamePathParameter'
            responses:
                '200':
                    description: 'All signups for this whitelist'
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/WhitelistSignup'
                default:
                    description: Unexpected error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'
    /community/whitelists/shared:
        get:
            summary: 'Get signups for all shared whitelists'
            operationId: getSharedWhitelistSignups
            tags:
                - discord
                - whitelist
            responses:
                '200':
                    description: 'All signups for all whitelists shared with this server'
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/SharedWhitelist'
                default:
                    description: Unexpected error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'

    /community/claimlists/{claimListName}/orders:
        get:
            summary: 'Get orders for a claim list'
            operationId: getClaimListOrders
            tags:
                - discord
                - claims
            parameters:
                - $ref: '#/components/parameters/ClaimListNamePathParameter'
            responses:
                '200':
                    description: 'All orders for this claim list'
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/AnonymousPhysicalOrder'
                default:
                    description: Unexpected error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'
    /community/claimlists/{claimListName}/products:
        get:
            summary: 'Get products for a claim list'
            operationId: getClaimListProducts
            tags:
                - discord
                - claims
            parameters:
                - $ref: '#/components/parameters/ClaimListNamePathParameter'
            responses:
                '200':
                    description: 'All products available for this claim list'
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/PhysicalProduct'
                default:
                    description: Unexpected error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'
components:
    parameters:
        WhitelistNamePathParameter:
            name: whitelistName
            in: path
            description: The name of this whitelist
            required: true
            style: simple
            example: MyGoodList
            schema:
                type: string
        ClaimListNamePathParameter:
            name: claimListName
            in: path
            description: The name of this claim list
            required: true
            style: simple
            example: HoodieOrder
            schema:
                type: string

    schemas:
        SharedWhitelist:
            type: object
            required:
                - guildId
                - guildName
                - whitelistName
                - whitelistDisplayName
                - signups
            properties:
                guildId:
                    type: integer
                    format: int64
                    example: 717264144759390238
                guildName:
                    type: string
                    example: Guild Name
                whitelistDisplayName:
                    type: string
                    minLength: 1
                    maxLength: 256
                whitelistName:
                    type: string
                    pattern: '^[A-Za-z][-A-Za-z0-9]{0,29}$'
                signups:
                    type: array
                    items:
                        $ref: '#/components/schemas/WhitelistSignup'

        WhitelistSignup:
            type: object
            required:
                - address
            properties:
                address:
                    $ref: '#/components/schemas/WalletAddress'
                signupTime:
                    type: string
                    format: date-time
                    example: 2021-11-10T13:20:57Z
        AnonymousPhysicalOrder:
            type: object
            required:
                - country
                - zipCode
                - city
                - street
                - items
            properties:
                id:
                    readOnly: true
                    type: integer
                    format: int64
                country:
                    type: string
                    example: Germany
                    minLength: 1
                    maxLength: 100
                zipCode:
                    type: string
                    example: 84323-2031
                    minLength: 1
                    maxLength: 30
                city:
                    type: string
                    example: Junkersdorf
                    minLength: 1
                    maxLength: 200
                street:
                    type: string
                    example: Burenstrasse 25
                    minLength: 1
                    maxLength: 500
                items:
                    type: array
                    minItems: 1
                    items:
                        $ref: '#/components/schemas/AnonymousPhysicalOrderItem'
                processed:
                    type: boolean
                    readOnly: true
        AnonymousPhysicalOrderItem:
            type: object
            required:
                - productId
                - count
            properties:
                productId:
                    type: integer
                    format: int64
                count:
                    type: integer
                    format: int64
        PhysicalProduct:
            type: object
            required:
                - name
            properties:
                id:
                    readOnly: true
                    type: integer
                    format: int64
                name:
                    type: string
                    example: T-Shirt
                variations:
                    type: object
                    example:
                        colors:
                            - Green
                            - Black
                            - Red
                        sizes:
                            - S
                            - M
                            - L
                            - XL
                            - XXL
        WalletAddress:
            type: string
        BlockchainType:
            type: string
            enum:
                - CARDANO
                - ETHEREUM
        CreatedResponseHeader:
            type: string
            format: uri
            description: URL of the newly created resource
        ErrorResponse:
            type: object
            required:
                - messages
                - httpStatus
                - httpStatusCode
            properties:
                messages:
                    type: array
                    items:
                        $ref: '#/components/schemas/ErrorMessage'
                httpStatus:
                    type: string
                httpStatusCode:
                    type: integer
                    format: int32
        ErrorMessage:
            type: object
            required:
                - message
            properties:
                message:
                    type: string
                sourceField:
                    type: string
    securitySchemes:
        BearerAuth:
            type: http
            description: You can receive your bearer token for the Authorization header using the Discord command '/configure-api generatetoken'
            scheme: bearer
            bearerFormat: '{token68}.???'
security:
    - BearerAuth: []